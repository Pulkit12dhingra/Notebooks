# -*- coding: utf-8 -*-
"""Classification Bcancer

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QdAd8zumCHvKevc6mssEdBNYsMlwFqCo
"""

from sklearn.datasets import load_breast_cancer

data=load_breast_cancer()

type(data)

data.keys()

data.data.shape

data.target.shape

data.target_names

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(data.data,data.target,test_size=0.2)
n,d=X_train.shape
print(n,d)

from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
X_train=scaler.fit_transform(X_train)
X_test=scaler.fit_transform(X_test)

import tensorflow as tf


# Alternatively, you can do:
model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Dense(1, input_shape=(d,), activation='sigmoid'))

model.compile(optimizer='adam',
              loss='binary_crossentropy',
              metrics=['accuracy'])



r = model.fit(X_train, Y_train, validation_data=(X_test, Y_test), epochs=100)
print("Train score:", model.evaluate(X_train, Y_train))
print("Test score:", model.evaluate(X_test, Y_test))

import matplotlib.pyplot as plt
plt.plot(r.history['loss'], label='loss')
plt.plot(r.history['val_loss'], label='val_loss')
plt.legend()

plt.plot(r.history['accuracy'], label='acc')
plt.plot(r.history['val_accuracy'], label='val_acc')
plt.legend()

